name: Create Git Tag and Git Release
on:
  push:
    branches: master
permissions: write-all
jobs:
  create_tag:
    name: Create Git Tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check for version changes
        id: version_check
        run: |
          # Fetch all tags from the remote repository
          git fetch --tags
          # Get the previous version from the last release tag
          previous_version=$(git describe --tags --abbrev=0)
          echo "Previous Version: $previous_version"
          # Get the current version from podspec file
          current_version=$(grep 'spec.version' LikeMindsFeedCore.podspec | awk -F '"' '/spec.version/{print $2}')
          echo "Current Version: $current_version"
          if [ "$previous_version" != "$current_version" ]; then
            echo "Version has changed from $previous_version to $current_version."
            echo "::set-output name=version::$current_version"
          else
            echo "Version has not changed."
            exit 1
          fi
      - name: Push Git Tag
        if: steps.version_check.outputs.version
        run: |
          # Configure Git user
          git config --global user.name "$(git log -n 1 --pretty=format:%an)"
          git config --global user.email "$(git log -n 1 --pretty=format:%ae)"
          # Create and push a Git tag with the new version
          current_version=$(grep 'spec.version' LikeMindsFeedCore.podspec | awk -F '"' '/spec.version/{print $2}')
          git tag -a "$current_version" -m "Version $current_version"
          git push origin "$current_version"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  create_github_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: create_tag
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Create Release
        run: |
          # Get the current version from the previous step
          current_version=$(grep 'spec.version' LikeMindsFeedCore.podspec | awk -F '"' '/spec.version/{print $2}')
          gh release create "v$current_version" --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}